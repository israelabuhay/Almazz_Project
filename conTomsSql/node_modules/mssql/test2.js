'use strict'

const sql = require('./')
// const wtf = require('wtfnode')

const sqlConfig = {
  password: 'Upper_l0wercase',
  database: 'di_production',
  // connectionTimeout: undefined,
  // requestTimeout: 30000,
  stream: false,
  options: { encrypt: true },
  port: 1433,
  user: 'sa',
  server: 'localhost',
  pool: {
    acquireTimeoutMillis: 1000,
    propagateCreateError: true
  }
}

function main () {

  sql.on('error', err => {
    console.log('from error handler')
    console.error(err)
  })

  sql.connect(sqlConfig).then((connection) => {
    return new Promise((resolve, reject) => {
      let isDone = false
      const request = new sql.Request()
      request.stream = true
      request.pause()
      request.on('row', (row) => {
        console.log(row)
        console.log('row: ', Math.round(process.memoryUsage().heapUsed / 1024 / 1024 * 100) / 100)
      })
      request.on('error', (err) => {
        if (!isDone) {
          isDone = true
          reject(err)
        }
      })
      request.on('done', () => {
        if (!isDone) {
          console.log('done: ', Math.round(process.memoryUsage().heapUsed / 1024 / 1024 * 100) / 100)
          isDone = true
          resolve()
        }
      })
      console.log('before start: ', Math.round(process.memoryUsage().heapUsed / 1024 / 1024 * 100) / 100)
      request.query('SELECT * FROM countries')
      setTimeout(() => {
        console.log('about to resume: ', Math.round(process.memoryUsage().heapUsed / 1024 / 1024 * 100) / 100)
        console.log('resuming')
        request.resume()
      }, 5000)
    });
  }).then(() => sql.close()).catch(err => {
    console.error(err)
    return sql.close()
  })
}

main()
